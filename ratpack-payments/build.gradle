apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: "io.ratpack.ratpack-java"
apply plugin: 'com.github.johnrengelman.shadow'

group = 'com.bogdan'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 11
targetCompatibility = 11

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:1.8.2"
        classpath 'org.jooq:jooq-codegen:3.14.6'
        classpath 'mysql:mysql-connector-java:8.0.23'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

repositories {
    jcenter()
}

dependencies {
    compile 'io.ratpack:ratpack-guice:1.8.2'
    compile 'io.ratpack:ratpack-hikari:1.8.2'

    compile 'io.vavr:vavr:0.9.0'
    compile 'io.vavr:vavr-jackson:0.9.0'

    compile 'org.jooq:jooq:3.14.6'
    compile 'org.jooq:jooq-meta:3.14.6'
    compile 'mysql:mysql-connector-java:8.0.23'
    compile 'org.flywaydb:flyway-core:7.5.3'

    runtime 'org.slf4j:slf4j-log4j12:1.7.28'

    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    testCompile "io.ratpack:ratpack-groovy-test:1.8.2"
    testCompile 'org.spockframework:spock-core:1.3-groovy-2.5'
    testCompile 'cglib:cglib-sample:3.3.0'
    testCompile 'org.objenesis:objenesis-parent:3.1'
}

jar {
    archivesBaseName = 'ratpack-payments'
    project.version = ''
}

mainClassName = 'com.bogdan.Application'

import org.jooq.codegen.GenerationTool
import org.jooq.meta.jaxb.*

task jooqCodegen {
    doLast {
        def configuration = new Configuration()
                .withJdbc(new Jdbc()
                        .withDriver("com.mysql.cj.jdbc.Driver")
                        .withUrl("jdbc:mysql://127.0.0.1:3306/payments")
                        .withUser("root")
                        .withPassword("pass"))
                .withGenerator(new Generator()
                        .withDatabase(new Database()
                                .withName("org.jooq.meta.mysql.MySQLDatabase")
                                .withIncludes(".*")
                                .withInputSchema("payments"))
                        .withGenerate(new Generate()
                                .withPojos(true)
                                .withDaos(false))
                        .withTarget(new Target()
                                .withPackageName("com.bogdan.jooq")
                                .withDirectory("$projectDir/src/main/java")))
        GenerationTool.generate(configuration)
    }
}